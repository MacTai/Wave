import { useState } from 'react';
import axios from 'axios';

export default function Home() {
  const [query, setQuery] = useState('');
  const [movies, setMovies] = useState([]);

  const searchMovies = async () => {
    const res = await axios.get(`http://www.omdbapi.com/?s=${query}&apikey=${process.env.OMDB_API_KEY}`);
    setMovies(res.data.Search || []);
  };

  return (
    <div>
      <h1>Consulta de Filmes</h1>
      <input 
        type="text" 
        value={query} 
        onChange={(e) => setQuery(e.target.value)} 
        placeholder="Digite o título do filme" 
      />
      <button onClick={searchMovies}>Buscar</button>
      <ul>
        {movies.map(movie => (
          <li key={movie.imdbID}>
            <a href={`/movie/${movie.imdbID}`}>
              <img src={movie.Poster} alt={movie.Title} />
              <h2>{movie.Title} ({movie.Year})</h2>
            </a>
          </li>
        ))}
      </ul>
    </div>
  );
}
import { useEffect, useState } from 'react';
import axios from 'axios';
import { useRouter } from 'next/router';

export default function MovieDetails() {
  const router = useRouter();
  const { id } = router.query;
  const [movie, setMovie] = useState(null);

  useEffect(() => {
    if (id) {
      const fetchMovie = async () => {
        const res = await axios.get(`http://www.omdbapi.com/?i=${id}&apikey=${process.env.OMDB_API_KEY}`);
        setMovie(res.data);
      };
      fetchMovie();
    }
  }, [id]);

  if (!movie) return <div>Carregando...</div>;

  return (
    <div>
      <h1>{movie.Title} ({movie.Year})</h1>
      <img src={movie.Poster} alt={movie.Title} />
      <p>Diretor: {movie.Director}</p>
      <p>Elenco: {movie.Actors}</p>
      <p>Sinopse: {movie.Plot}</p>
      <p>Avaliação: {movie.imdbRating}</p>
    </div>
  );
}
const saveToFavorites = (movie) => {
  const favorites = JSON.parse(localStorage.getItem('favorites')) || [];
  favorites.push(movie);
  localStorage.setItem('favorites', JSON.stringify(favorites));
};
const [page, setPage] = useState(1);
const [filters, setFilters] = useState({ year: '', genre: '', type: '' });

const searchMovies = async () => {
  const res = await axios.get(`http://www.omdbapi.com/?s=${query}&page=${page}&y=${filters.year}&type=${filters.type}&apikey=${process.env.OMDB_API_KEY}`);
  setMovies(res.data.Search || []);
};
